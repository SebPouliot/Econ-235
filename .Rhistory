knit_with_parameters('D:/Box Sync/Teaching/Econ 235/Econ 235 - Fall 2018/Econ 235/1) Review of micro.Rmd', encoding = 'UTF-8')
mytheme <- source("figures/Graph parameters.r")
library(pacman)
pacman::p_load(dplyr)
pacman::p_load(magrittr)
pacman::p_load(ggplot2)
suppressMessages(pacman::p_load(reshape2))
suppressMessages(pacman::p_load(gridExtra))
pacman::p_load(Quandl)
suppressMessages(pacman::p_load(lubridate))
pacman::p_load(scales)
pacman::p_load(viridis)
pacman::p_load(Cairo)
#Authentification
Quandl.api_key("2xcmYFJoJKuEDwawuV7J")
mytheme <- source("figures/Graph parameters.r")
knitr::opts_chunk$set(echo = TRUE)
#Load some packages
library(pacman)
pacman::p_load(dplyr)
pacman::p_load(magrittr)
pacman::p_load(ggplot2)
suppressMessages(pacman::p_load(reshape2))
suppressMessages(pacman::p_load(gridExtra))
pacman::p_load(Quandl)
suppressMessages(pacman::p_load(lubridate))
pacman::p_load(scales)
pacman::p_load(viridis)
pacman::p_load(Cairo)
#Authentification
Quandl.api_key("2xcmYFJoJKuEDwawuV7J")
#Basic setup for figures
mytheme <- source("figures/Graph parameters.r")
dta <- Quandl("CME/CZ1990", type="raw")
dta <- tbl_df(dta)
dta <- dta %>% mutate(contract = "1990",
Settle = Settle/100,
year = as.numeric(substr(Date, 1, 4)),
week = 1:nrow(dta),
day = day(Date),
month = month(Date),
date = paste("2008", month(Date), sep="-") %>% paste(day(Date), sep="-") %>% as.Date("%Y-%m-%d"))
dta <- dta %>% dplyr::filter(year==1990)
dta <- dta %>% dplyr::select(Date, Settle, contract, date)
for (i in 1991:2017){
dta0 <- Quandl(paste("CME/CZ", i, sep=""), type="raw")
dta0 <- tbl_df(dta0)
dta0 <- mutate(dta0,
contract = as.character(i),
Settle = Settle/100,
year = as.numeric(substr(Date, 1, 4)),
week = 1:nrow(dta0),
day = day(Date),
month = month(Date),
date = paste("2008", month(Date), sep="-") %>% paste(day(Date), sep="-") %>% as.Date("%Y-%m-%d"))
dta0 <- dta0 %>% dplyr::filter(year==i)
dta0 <- dta0 %>% dplyr::select(Date, Settle, contract, date)
dta <- rbind(dta, dta0)
}
rm(dta0, i)
dta2 <- dta %>% dplyr::filter(contract=="2017" | contract=="2016" | contract=="2015" | contract=="2014" | contract=="2013")
corn_plot <- ggplot(data = dta, aes(x = date, y = Settle, group = contract)) +
geom_line( colour = "gray70") +
geom_line(data=dta2, aes(y = Settle, colour = contract), size=1) +
scale_color_viridis(discrete = TRUE) +
ylab("Price ($/bu)") +
scale_x_date(date_breaks="1 month", date_minor_breaks="1 month", labels=date_format("%b")) +
scale_y_continuous(breaks = 2:8, minor_breaks = seq(2, 8, by = 0.5)) +
theme_bw() +
mytheme + theme(axis.title.x = element_blank(), axis.line = element_line(color='black'))
ggplot(data = dta, aes(x = date, y = Settle, group = contract)) +
geom_line( colour = "gray70") +
geom_line(data=dta2, aes(y = Settle, colour = contract), size=1)
ggplot(data = dta, aes(x = date, y = Settle, group = contract)) +
geom_line( colour = "gray70") +
geom_line(data=dta2, aes(y = Settle, colour = contract), size=1) +
scale_color_viridis(discrete = TRUE) +
ylab("Price ($/bu)")
ggplot(data = dta, aes(x = date, y = Settle, group = contract)) +
geom_line( colour = "gray70") +
geom_line(data=dta2, aes(y = Settle, colour = contract), size=1) +
scale_color_viridis(discrete = TRUE) +
ylab("Price ($/bu)") +
scale_x_date(date_breaks="1 month", date_minor_breaks="1 month", labels=date_format("%b"))
ggplot(data = dta, aes(x = date, y = Settle, group = contract)) +
geom_line( colour = "gray70") +
geom_line(data=dta2, aes(y = Settle, colour = contract), size=1) +
scale_color_viridis(discrete = TRUE) +
ylab("Price ($/bu)") +
scale_x_date(date_breaks="1 month", date_minor_breaks="1 month", labels=date_format("%b")) +
scale_y_continuous(breaks = 2:8, minor_breaks = seq(2, 8, by = 0.5))
ggplot(data = dta, aes(x = date, y = Settle, group = contract)) +
geom_line( colour = "gray70") +
geom_line(data=dta2, aes(y = Settle, colour = contract), size=1) +
scale_color_viridis(discrete = TRUE) +
ylab("Price ($/bu)") +
scale_x_date(date_breaks="1 month", date_minor_breaks="1 month", labels=date_format("%b")) +
scale_y_continuous(breaks = 2:8, minor_breaks = seq(2, 8, by = 0.5)) +
theme_bw()
ggplot(data = dta, aes(x = date, y = Settle, group = contract)) +
geom_line( colour = "gray70") +
geom_line(data=dta2, aes(y = Settle, colour = contract), size=1) +
scale_color_viridis(discrete = TRUE) +
ylab("Price ($/bu)") +
scale_x_date(date_breaks="1 month", date_minor_breaks="1 month", labels=date_format("%b")) +
scale_y_continuous(breaks = 2:8, minor_breaks = seq(2, 8, by = 0.5)) +
theme_bw() +
mytheme
mytheme
ggplot(data = dta, aes(x = date, y = Settle, group = contract)) +
geom_line( colour = "gray70") +
geom_line(data=dta2, aes(y = Settle, colour = contract), size=1) +
scale_color_viridis(discrete = TRUE) +
ylab("Price ($/bu)") +
scale_x_date(date_breaks="1 month", date_minor_breaks="1 month", labels=date_format("%b")) +
scale_y_continuous(breaks = 2:8, minor_breaks = seq(2, 8, by = 0.5)) +
theme_bw()
ggplot(data = dta, aes(x = date, y = Settle, group = contract)) +
geom_line( colour = "gray70") +
geom_line(data=dta2, aes(y = Settle, colour = contract), size=1) +
scale_color_viridis(discrete = TRUE) +
ylab("Price ($/bu)") +
scale_x_date(date_breaks="1 month", date_minor_breaks="1 month", labels=date_format("%b")) +
scale_y_continuous(breaks = 2:8, minor_breaks = seq(2, 8, by = 0.5)) +
theme_bw() +
mytheme
ggplot(data = dta, aes(x = date, y = Settle, group = contract)) +
geom_line( colour = "gray70") +
geom_line(data=dta2, aes(y = Settle, colour = contract), size=1) +
scale_color_viridis(discrete = TRUE) +
ylab("Price ($/bu)") +
scale_x_date(date_breaks="1 month", date_minor_breaks="1 month", labels=date_format("%b")) +
scale_y_continuous(breaks = 2:8, minor_breaks = seq(2, 8, by = 0.5)) +
theme_bw() +
theme(plot.title = element_text(size = 10, colour = 'black', family = "Times New Roman"),
text=element_text(size=10, family = "Times New Roman", colour = 'black'),
axis.ticks.x = element_line(color='black'),
axis.ticks.y = element_line(color='black'),
axis.text.y = element_text(colour = 'black', family = "Times New Roman"),
axis.text.x = element_text(size = 10, colour = 'black', family = "Times New Roman"),
panel.border = element_blank(),
axis.line.x = element_line(color='black'),
axis.line.y = element_line(color='black'),
plot.margin=unit(c(0.5,0.5,0.5,0.5), "lines"),
legend.title=element_blank(),
legend.text = element_text(size = 8, colour = 'black', family = "Times New Roman"),
legend.background=element_blank(),
legend.key=element_blank(),
legend.position="bottom")
source("figures/Graph parameters.r")
ggplot(data = dta, aes(x = date, y = Settle, group = contract)) +
geom_line( colour = "gray70") +
geom_line(data=dta2, aes(y = Settle, colour = contract), size=1) +
scale_color_viridis(discrete = TRUE) +
ylab("Price ($/bu)") +
scale_x_date(date_breaks="1 month", date_minor_breaks="1 month", labels=date_format("%b")) +
scale_y_continuous(breaks = 2:8, minor_breaks = seq(2, 8, by = 0.5)) +
theme_bw() +
mytheme +
theme(axis.title.x = element_blank(), axis.line = element_line(color='black'))
pacman::p_load(ggplot2)
pacman::p_load(grid)#for arrow in graph
suppressMessages(pacman::p_load(gridExtra))
pacman::p_load(scales)
pacman::p_load(ggthemes)
suppressMessages(pacman::p_load(extrafont))
pacman::p_load(ggplot2)
pacman::p_load(grid)#for arrow in graph
suppressMessages(pacman::p_load(gridExtra))
pacman::p_load(scales)
pacman::p_load(ggthemes)
suppressMessages(pacman::p_load(extrafont)) #The package extrafont imports fonts that can be used with ggplot2
font_import()
pacman::p_load(viridis)
install.packages(c("bit", "broom", "caTools", "data.table", "dbplyr", "devtools", "dplyr", "evaluate", "ggplot2", "git2r", "glue", "haven", "highr", "lambda.r", "maptools", "munsell", "openssl", "pillar", "purrr", "Rcpp", "reprex", "rJava", "rlang", "rmarkdown", "scales", "stringi", "stringr", "tidyr", "tinytex", "utf8", "xlsx", "yaml", "zoo"))
pacman::p_load(ggplot2)
pacman::p_load(grid)#for arrow in graph
suppressMessages(pacman::p_load(gridExtra))
pacman::p_load(scales)
pacman::p_load(ggthemes)
suppressMessages(pacman::p_load(extrafont)) #The package extrafont imports fonts that can be used with ggplot2
font_import()
pacman::p_load(viridis)
font_import()
font_import()
